name: CI

on: 
  push:
    branches:
      - main
      - release/**

  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - release/**

jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    
    - name: Setup .NET Core v6
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.100'

    - name: Setup GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.9
      with:
        versionSpec: '5.x'

    - name: GitVersion
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.9
      with:
        useConfigFile: true
        configFilePath: build/gitversion.yml

    - name: Build - CI
      run: |
        $adjustedPackageVersion="${{ steps.gitversion.outputs.semVer }}".ToLower();
        $msbuild = vswhere -latest -requires Microsoft.Component.MSBuild -find MSBuild\**\Bin\MSBuild.exe
        & $msbuild /r /p:Configuration=Release "/t:Build;Pack" /p:PackageVersion=$adjustedPackageVersion /p:Version=${{ steps.gitversion.outputs.assemblySemVer }} "/p:PackageOutputPath=.\artifacts" src\Uno.XamlMerge.Task\Uno.XamlMerge.Task.csproj

    - name: Validate Test Projects
      run: |
        $msbuild = vswhere -latest -requires Microsoft.Component.MSBuild -find MSBuild\**\Bin\MSBuild.exe
        & $msbuild /r /p:Configuration=Release src\Uno.XamlMerge.Task.sln

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: NuGet
        path: .\artifacts

  publish:
    name: Publish
    if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/')) }}
    runs-on: windows-latest
    needs:
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: NuGet
          path: artifacts

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'

      - name: Setup SignClient
        run: |
          dotnet tool install --tool-path build SignClient

      - name: SignClient
        run: |
          build\SignClient sign -i artifacts\*.nupkg -c build\SignClient.json -r "${{ secrets.SIGN_CLIENT_USER }}" -s "${{ secrets.SIGN_CLIENT_SECRET }}" -n "Uno.Check" -d "Uno.Check" -u "https://github.com/unoplatform/uno.check"

      - name: NuGet Push
        run: |
          dotnet nuget push artifacts\*.nupkg -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_ORG_API_KEY }}
